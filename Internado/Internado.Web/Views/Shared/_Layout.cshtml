@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpCtx
<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>@ViewData["Title"] - Internado</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/themes/material_blue.css">
  <style>
    :root {
      --primary-color: #0d6efd;
      --primary-dark: #0b5ed7;
      --success-color: #198754;
      --warning-color: #ffc107;
      --danger-color: #dc3545;
      --info-color: #0dcaf0;
      --text-muted: #6c757d;
      --border-radius: 8px;
      --transition: all 0.3s ease;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      background-attachment: fixed;
    }

    .navbar {
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      backdrop-filter: blur(10px);
      background: rgba(13, 110, 253, 0.95) !important;
    }

    .navbar-brand {
      font-weight: 700;
      font-size: 1.5rem;
      transition: var(--transition);
    }

    .navbar-brand:hover {
      transform: scale(1.05);
    }

    .nav-link {
      transition: var(--transition);
      border-radius: 6px;
      margin: 0 4px;
      padding: 8px 16px !important;
    }

    .nav-link:hover {
      background: rgba(255,255,255,0.15);
      transform: translateY(-2px);
    }

    .nav-link.active {
      background: rgba(255,255,255,0.2);
      font-weight: 600;
    }

    main.container {
      background: white;
      border-radius: var(--border-radius);
      box-shadow: 0 10px 40px rgba(0,0,0,0.1);
      padding: 2rem;
      margin-top: 2rem;
      margin-bottom: 2rem;
      animation: fadeIn 0.5s ease;
    }

    @@keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .card {
      border: none;
      border-radius: var(--border-radius);
      box-shadow: 0 2px 8px rgba(0,0,0,0.08);
      transition: var(--transition);
      overflow: hidden;
    }

    .card:hover {
      box-shadow: 0 8px 24px rgba(0,0,0,0.12);
      transform: translateY(-4px);
    }

    .card-header {
      border: none;
      font-weight: 600;
      padding: 1.25rem 1.5rem;
    }

    .btn {
      border-radius: 6px;
      padding: 10px 24px;
      font-weight: 500;
      transition: var(--transition);
      border: none;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }

    .btn:active {
      transform: translateY(0);
    }

    .btn-success {
      background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
    }

    .btn-primary {
      background: linear-gradient(135deg, #0d6efd 0%, #0dcaf0 100%);
    }

    .btn-warning {
      background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%);
      color: white;
    }

    .btn-danger {
      background: linear-gradient(135deg, #dc3545 0%, #e83e8c 100%);
    }

    .btn-info {
      background: linear-gradient(135deg, #0dcaf0 0%, #0d6efd 100%);
      color: white;
    }

    .form-control, .form-select {
      border: 2px solid #e9ecef;
      border-radius: 6px;
      padding: 10px 16px;
      transition: var(--transition);
    }

    .form-control:focus, .form-select:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 0.2rem rgba(13,110,253,0.15);
    }

    .form-label {
      font-weight: 600;
      margin-bottom: 8px;
      color: #495057;
      font-size: 0.95rem;
    }

    .badge {
      padding: 6px 12px;
      border-radius: 20px;
      font-weight: 500;
      font-size: 0.85rem;
    }

    .alert {
      border: none;
      border-radius: var(--border-radius);
      padding: 1rem 1.25rem;
      box-shadow: 0 2px 8px rgba(0,0,0,0.08);
      animation: slideDown 0.3s ease;
    }

    @@keyframes slideDown {
      from {
        opacity: 0;
        transform: translateY(-20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .table {
      border-radius: var(--border-radius);
      overflow: hidden;
    }

    .table thead {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
    }

    .table thead th {
      border: none;
      font-weight: 600;
      text-transform: uppercase;
      font-size: 0.85rem;
      letter-spacing: 0.5px;
      padding: 1rem;
    }

    .table tbody tr {
      transition: var(--transition);
    }

    .table tbody tr:hover {
      background-color: #f8f9fa;
      transform: scale(1.01);
    }

    .btn-group .btn {
      margin: 0 2px;
    }

    .stats-card {
      background: linear-gradient(135deg, var(--card-color-start) 0%, var(--card-color-end) 100%);
      border-radius: var(--border-radius);
      padding: 1.5rem;
      color: white;
      transition: var(--transition);
      position: relative;
      overflow: hidden;
    }

    .stats-card::before {
      content: '';
      position: absolute;
      top: -50%;
      right: -50%;
      width: 200%;
      height: 200%;
      background: rgba(255,255,255,0.1);
      transform: rotate(45deg);
      transition: var(--transition);
    }

    .stats-card:hover::before {
      right: -20%;
    }

    .stats-card:hover {
      transform: translateY(-8px) scale(1.02);
      box-shadow: 0 12px 32px rgba(0,0,0,0.2);
    }

    .stats-card h5 {
      font-size: 0.9rem;
      font-weight: 600;
      opacity: 0.95;
      margin-bottom: 0.5rem;
    }

    .stats-card h2 {
      font-size: 2.5rem;
      font-weight: 700;
      margin: 0;
    }

    .spinner {
      animation: spin 1s linear infinite;
    }

    @@keyframes spin {
      to { transform: rotate(360deg); }
    }

    @@media (max-width: 768px) {
      main.container {
        padding: 1rem;
        margin-top: 1rem;
      }

      .stats-card h2 {
        font-size: 2rem;
      }

      .navbar-brand {
        font-size: 1.2rem;
      }
    }

    .flatpickr-calendar {
      border-radius: var(--border-radius);
      box-shadow: 0 8px 24px rgba(0,0,0,0.15);
    }

    .toast {
      box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }

    .breadcrumb {
      background: transparent;
      padding: 0;
      margin-bottom: 1rem;
    }

    .breadcrumb-item + .breadcrumb-item::before {
      content: "›";
      font-size: 1.2rem;
    }

    .breadcrumb-item a {
      color: #6c757d;
      text-decoration: none;
      transition: var(--transition);
    }

    .breadcrumb-item a:hover {
      color: var(--primary-color);
    }

    /* Scrollbar personalizada */
    ::-webkit-scrollbar {
      width: 10px;
      height: 10px;
    }

    ::-webkit-scrollbar-track {
      background: #f1f1f1;
    }

    ::-webkit-scrollbar-thumb {
      background: #888;
      border-radius: 5px;
    }

    ::-webkit-scrollbar-thumb:hover {
      background: #555;
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark">
    <div class="container-fluid">
      <a class="navbar-brand" asp-controller="Dashboard" asp-action="Index">
        <i class="bi bi-mortarboard-fill"></i> Sistema Internado
      </a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navMain">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div id="navMain" class="collapse navbar-collapse">
        <ul class="navbar-nav me-auto">
          <li class="nav-item">
            <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Dashboard" ? "active" : "")" 
               asp-controller="Dashboard" 
               asp-action="Index">
              <i class="bi bi-speedometer2"></i> Dashboard
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Residentes" ? "active" : "")" 
               asp-controller="Residentes" 
               asp-action="Index">
              <i class="bi bi-people-fill"></i> Residentes
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Users" ? "active" : "")" 
               asp-controller="Users" 
               asp-action="Index">
              <i class="bi bi-person-badge"></i> Usuarios
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Habitaciones" ? "active" : "")" 
              asp-controller="Habitaciones" 
              asp-action="Index">
              <i class="bi bi-door-closed"></i> Habitaciones
            </a>
          </li>
        </ul>
        <ul class="navbar-nav ms-auto">
@{
    var user = HttpCtx.HttpContext?.User;
    var nombre = user?.Identity?.IsAuthenticated == true ? (user.Identity!.Name ?? "Usuario") : null;

    if (user?.Identity?.IsAuthenticated == true)
    {
      <li class="nav-item me-3">
        <span class="navbar-text text-white">
          <i class="bi bi-person-circle"></i> Bienvenido, <strong>@nombre</strong>
        </span>
      </li>
      <li class="nav-item">
        <form asp-controller="Account" asp-action="Logout" method="post" class="d-inline">
          <button class="btn btn-sm btn-light">
            <i class="bi bi-box-arrow-right"></i> Cerrar sesión
          </button>
        </form>
      </li>
    }
    else
    {
      <li class="nav-item">
        <a class="nav-link" asp-controller="Account" asp-action="Login">
          <i class="bi bi-box-arrow-in-right"></i> Iniciar sesión
        </a>
      </li>
    }
}
        </ul>
      </div>
    </div>
  </nav>

  <main class="container">
    @RenderBody()
  </main>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
  <script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/es.js"></script>
  <script>
    // Auto-cerrar alertas después de 5 segundos
    document.addEventListener('DOMContentLoaded', function() {
      const alerts = document.querySelectorAll('.alert');
      alerts.forEach(alert => {
        setTimeout(() => {
          const bsAlert = new bootstrap.Alert(alert);
          bsAlert.close();
        }, 5000);
      });
    });
  </script>
  @RenderSection("Scripts", required: false)
</body>
</html>