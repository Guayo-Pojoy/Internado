@model List<Internado.Infrastructure.Models.Residente>

@{
    var curso = ViewBag.Curso as Internado.Infrastructure.Models.Curso;
    var fecha = ViewBag.Fecha as DateTime? ?? DateTime.Today;
    var asistencias = ViewBag.Asistencias as Dictionary<int, string> ?? new();
    var observaciones = ViewBag.Observaciones as Dictionary<int, string> ?? new();
    ViewData["Title"] = "Asistencia";
}

<div class="container-fluid main-content">
    <!-- Page Header -->
    <div class="page-header d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-0">✅ Registrar Asistencia</h2>
            <p class="text-muted mb-0">
                <i class="bi bi-journal-text me-1"></i>
                <strong>Curso:</strong> @curso?.Nombre
                <span class="mx-2">|</span>
                <i class="bi bi-calendar-event me-1"></i>
                <strong>Fecha:</strong> @fecha.ToString("dd/MM/yyyy")
            </p>
        </div>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="bi bi-arrow-left me-2"></i>Volver
        </a>
    </div>

    <!-- Alerts -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i>@TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i>@TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Card con tabla -->
    <div class="card shadow-sm">
        <div class="card-body">
            @if (Model == null || !Model.Any())
            {
                <div class="alert alert-info" role="alert">
                    <i class="bi bi-info-circle me-2"></i>
                    No hay residentes matriculados en este curso.
                </div>
            }
            else
            {
                <form asp-action="GuardarAsistencia" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="cursoId" value="@curso?.Id" />
                    <input type="hidden" name="fecha" value="@fecha.ToString("yyyy-MM-dd")" />

                    <div class="table-responsive">
                        <table class="table table-striped table-hover align-middle">
                            <thead class="table-light">
                                <tr>
                                    <th style="width: 30%;">Residente</th>
                                    <th style="width: 15%;">Grado</th>
                                    <th style="width: 20%;">Estado</th>
                                    <th style="width: 35%;">Observaciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var residente in Model.OrderBy(r => r.NombreCompleto))
                                {
                                    var estadoActual = asistencias.TryGetValue(residente.Id, out var estado) ? estado : "Presente";
                                    var observacionActual = observaciones.TryGetValue(residente.Id, out var obs) ? obs : "";
                                    <tr>
                                        <td>
                                            <strong>@residente.NombreCompleto</strong>
                                        </td>
                                        <td>
                                            <span class="badge bg-secondary">
                                                @(residente.Grado?.Nombre ?? "Sin grado")
                                            </span>
                                        </td>
                                        <td>
                                            <select name="asistencia[residente_@residente.Id]"
                                                    class="form-select form-select-sm estado-select"
                                                    data-residente="@residente.Id">
                                                <option value="Presente" selected="@(estadoActual == "Presente")">
                                                    ✅ Presente
                                                </option>
                                                <option value="Ausente" selected="@(estadoActual == "Ausente")">
                                                    ❌ Ausente
                                                </option>
                                                <option value="Tarde" selected="@(estadoActual == "Tarde")">
                                                    ⏰ Tarde
                                                </option>
                                            </select>
                                        </td>
                                        <td>
                                            <input type="text"
                                                   name="excusa[residente_@residente.Id]"
                                                   class="form-control form-control-sm excusa-input"
                                                   data-residente="@residente.Id"
                                                   value="@observacionActual"
                                                   placeholder="Ej: Cita médica, asunto familiar..."
                                                   maxlength="250" />
                                            <small class="text-muted" id="excusa-help-@residente.Id" style="display: none;">
                                                <i class="bi bi-info-circle"></i> Recomendado para Ausente o Tarde
                                            </small>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- Botones de acción -->
                    <div class="mt-4 pt-3 border-top">
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-check-lg me-2"></i>Guardar Asistencia
                        </button>
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="bi bi-x-circle me-2"></i>Cancelar
                        </a>
                    </div>
                </form>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Función para mostrar/ocultar ayuda de excusa
            function toggleExcusaHelp(select) {
                const residenteId = select.getAttribute('data-residente');
                const helpText = document.getElementById('excusa-help-' + residenteId);
                const excusaInput = document.querySelector('.excusa-input[data-residente="' + residenteId + '"]');

                if (select.value === 'Ausente' || select.value === 'Tarde') {
                    helpText.style.display = 'block';
                    excusaInput.classList.add('border-warning');
                } else {
                    helpText.style.display = 'none';
                    excusaInput.classList.remove('border-warning');
                }
            }

            // Aplicar a todos los selects al cargar
            document.querySelectorAll('.estado-select').forEach(function(select) {
                toggleExcusaHelp(select);

                // Agregar evento change
                select.addEventListener('change', function() {
                    toggleExcusaHelp(this);
                });
            });
        });
    </script>
}
