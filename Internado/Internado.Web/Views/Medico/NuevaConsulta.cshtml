@{
    ViewData["Title"] = "Nueva Consulta Médica";
    var residentes = ViewBag.Residentes as List<Internado.Infrastructure.Models.Residente>;
}

<div class="container mt-4">
    <h2><i class="bi bi-heart-pulse"></i> Nueva Consulta Médica</h2>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show">
            <i class="bi bi-exclamation-triangle"></i> @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="card">
        <div class="card-body">
            <form asp-action="GuardarConsulta" method="post">
                @Html.AntiForgeryToken()

                <div class="mb-3">
                    <label for="residenteId" class="form-label">Residente <span class="text-danger">*</span></label>
                    <select name="residenteId" id="residenteId" class="form-select" required>
                        <option value="">Seleccione un residente...</option>
                        @if (residentes != null)
                        {
                            @foreach (var residente in residentes)
                            {
                                <option value="@residente.Id">@residente.NombreCompleto - DPI: @residente.DPI</option>
                            }
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label for="diagnostico" class="form-label">Diagnóstico <span class="text-danger">*</span></label>
                    <textarea name="diagnostico" id="diagnostico" class="form-control" rows="3"
                              maxlength="400" required placeholder="Describa el diagnóstico..."></textarea>
                    <small class="text-muted">Máximo 400 caracteres</small>
                </div>

                <div class="mb-3">
                    <label for="tratamiento" class="form-label">Tratamiento</label>
                    <textarea name="tratamiento" id="tratamiento" class="form-control" rows="3"
                              maxlength="400" placeholder="Describa el tratamiento (opcional)..."></textarea>
                    <small class="text-muted">Máximo 400 caracteres</small>
                </div>

                <hr class="my-4">

                <div class="mb-3">
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" id="generarPaseSalida"
                               name="generarPaseSalida" onchange="togglePaseSalida()">
                        <label class="form-check-label" for="generarPaseSalida">
                            <strong><i class="bi bi-file-earmark-check"></i> Generar Pase de Salida</strong>
                        </label>
                    </div>
                    <small class="text-muted">Active esta opción para autorizar una salida del internado</small>
                </div>

                <div id="pase-salida-section" style="display: none;">
                    <div class="card bg-light">
                        <div class="card-body">
                            <h6 class="card-title"><i class="bi bi-clipboard-check"></i> Detalles del Pase de Salida</h6>

                            <div class="mb-3">
                                <label for="motivoPase" class="form-label">Motivo de la Salida <span class="text-danger">*</span></label>
                                <input type="text" name="motivoPase" id="motivoPase" class="form-control"
                                       placeholder="Ej: Cita médica externa, asunto familiar urgente..." maxlength="200">
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="fechaSalida" class="form-label">Fecha y Hora de Salida <span class="text-danger">*</span></label>
                                    <input type="datetime-local" name="fechaSalida" id="fechaSalida" class="form-control">
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label for="fechaRetorno" class="form-label">Fecha y Hora de Retorno <span class="text-danger">*</span></label>
                                    <input type="datetime-local" name="fechaRetorno" id="fechaRetorno" class="form-control">
                                </div>
                            </div>

                            <div class="alert alert-warning mb-0">
                                <i class="bi bi-exclamation-triangle"></i>
                                <strong>Nota:</strong> El residente debe presentar este pase de salida en portería.
                                El pase podrá imprimirse desde la lista de consultas.
                            </div>
                        </div>
                    </div>
                </div>

                <div class="mt-4">
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-check-lg"></i> Guardar Consulta
                    </button>
                    <a href="@Url.Action("Consultas")" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Cancelar
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function togglePaseSalida() {
            const checkbox = document.getElementById('generarPaseSalida');
            const section = document.getElementById('pase-salida-section');
            const motivoPase = document.getElementById('motivoPase');
            const fechaSalida = document.getElementById('fechaSalida');
            const fechaRetorno = document.getElementById('fechaRetorno');

            if (checkbox.checked) {
                section.style.display = 'block';
                motivoPase.required = true;
                fechaSalida.required = true;
                fechaRetorno.required = true;

                // Establecer fecha/hora actual como mínimo
                const now = new Date();
                const minDateTime = now.toISOString().slice(0, 16);
                fechaSalida.min = minDateTime;
                fechaRetorno.min = minDateTime;
            } else {
                section.style.display = 'none';
                motivoPase.required = false;
                fechaSalida.required = false;
                fechaRetorno.required = false;
            }
        }

        // Validación: Fecha retorno debe ser posterior a fecha salida
        document.getElementById('fechaRetorno')?.addEventListener('change', function() {
            const fechaSalida = document.getElementById('fechaSalida').value;
            const fechaRetorno = this.value;

            if (fechaSalida && fechaRetorno && fechaRetorno <= fechaSalida) {
                alert('La fecha de retorno debe ser posterior a la fecha de salida');
                this.value = '';
            }
        });
    </script>
}
