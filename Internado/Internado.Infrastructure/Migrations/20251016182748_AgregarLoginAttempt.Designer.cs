// <auto-generated />
using System;
using Internado.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Internado.Infrastructure.Migrations
{
    [DbContext(typeof(InternadoDbContext))]
    [Migration("20251016182748_AgregarLoginAttempt")]
    partial class AgregarLoginAttempt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Internado.Infrastructure.Models.Asistencium", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Observacion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ResidenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CursoId", "Fecha" }, "IX_Asistencia_Curso_Fecha");

                    b.HasIndex(new[] { "ResidenteId", "Fecha", "CursoId" }, "UQ_Asistencia")
                        .IsUnique();

                    b.ToTable("Asistencia", "aca");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.AuditoriaAcceso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaUtc")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("IP")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FechaUtc" }, "IX_Auditoria_Fecha");

                    b.HasIndex(new[] { "UsuarioId" }, "IX_Auditoria_Usuario");

                    b.ToTable("AuditoriaAccesos", "sec");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Calificacione", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<decimal>("Nota")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("ResidenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex(new[] { "ResidenteId", "CursoId" }, "IX_Calif_Res_Curso");

                    b.ToTable("Calificaciones", "aca");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Consulta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime>("Fecha")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.Property<int>("ResidenteId")
                        .HasColumnType("int");

                    b.Property<string>("Tratamiento")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "MedicoId", "Fecha" }, "IX_Consultas_Medico_Fecha");

                    b.HasIndex(new[] { "ResidenteId", "Fecha" }, "IX_Consultas_Res_Fecha");

                    b.ToTable("Consultas", "med");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DocenteId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DocenteId");

                    b.ToTable("Cursos", "aca");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Habitacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Edificio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Piso")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Habitaciones");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.HistorialAcademico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<decimal>("Promedio")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("ResidenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ResidenteId", "Anio" }, "UQ_HA_Res_Anio")
                        .IsUnique();

                    b.ToTable("HistorialAcademico", "aca");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.HistorialMedico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime>("Fecha")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("ResidenteId")
                        .HasColumnType("int");

                    b.Property<string>("Tratamiento")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ResidenteId", "Fecha" }, "IX_HM_Res_Fecha");

                    b.ToTable("HistorialMedico", "med");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.LoginAttempt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DireccionIp")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<DateTime>("FechaIntento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("TipoError")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("CredencialesInvalidas");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("LoginAttempts");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Medicamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("FechaVencimiento")
                        .HasColumnType("date");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("StockActual")
                        .HasColumnType("int");

                    b.Property<int>("StockMinimo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10);

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FechaVencimiento" }, "IX_Medicamentos_Vencimiento");

                    b.ToTable("Medicamentos", "med");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.MovimientosMedicamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<int>("MedicamentoId")
                        .HasColumnType("int");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_MovimientosMed");

                    b.HasIndex("UsuarioId");

                    b.HasIndex(new[] { "MedicamentoId", "Fecha" }, "IX_MM_Med_Fecha");

                    b.ToTable("MovimientosMedicamentos", "med");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Periodo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<byte>("Trimestre")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Anio", "Trimestre" }, "UQ_Periodo")
                        .IsUnique();

                    b.ToTable("Periodos", "aca");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Residente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DPI")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateOnly?>("FechaEgreso")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaIngreso")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<int?>("HabitacionId")
                        .HasColumnType("int");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Tutor")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("HabitacionId");

                    b.ToTable("Residentes", "aca");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NombreRol" }, "UQ_Roles_Nombre")
                        .IsUnique();

                    b.ToTable("Roles", "sec");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BloqueadoHastaUtc")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<byte[]>("HashContrasena")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)");

                    b.Property<int>("IntentosFallidos")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Usuario1")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Usuario");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.HasIndex(new[] { "Correo" }, "IX_Usuarios_Correo");

                    b.HasIndex(new[] { "Usuario1" }, "IX_Usuarios_Usuario");

                    b.HasIndex(new[] { "Correo" }, "UQ_Usuarios_Correo")
                        .IsUnique();

                    b.HasIndex(new[] { "Usuario1" }, "UQ_Usuarios_Usuario")
                        .IsUnique();

                    b.ToTable("Usuarios", "sec");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.vw_Indicadore", b =>
                {
                    b.Property<int?>("Activas")
                        .HasColumnType("int");

                    b.Property<DateTime>("Corte")
                        .HasColumnType("datetime");

                    b.Property<int?>("Egresadas")
                        .HasColumnType("int");

                    b.Property<int?>("MedicamentosBajoStock")
                        .HasColumnType("int");

                    b.Property<int?>("MedicamentosVencidos")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vw_Indicadores", "rep");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.vw_ReportesGenerale", b =>
                {
                    b.Property<int?>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("Faltas")
                        .HasColumnType("int");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("Promedio")
                        .HasColumnType("decimal(38, 6)");

                    b.Property<int>("ResidenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaConsulta")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.ToTable((string)null);

                    b.ToView("vw_ReportesGenerales", "rep");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Asistencium", b =>
                {
                    b.HasOne("Internado.Infrastructure.Models.Curso", "Curso")
                        .WithMany("Asistencia")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Asistencia_Curso");

                    b.HasOne("Internado.Infrastructure.Models.Residente", "Residente")
                        .WithMany("Asistencia")
                        .HasForeignKey("ResidenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Asistencia_Res");

                    b.Navigation("Curso");

                    b.Navigation("Residente");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Calificacione", b =>
                {
                    b.HasOne("Internado.Infrastructure.Models.Curso", "Curso")
                        .WithMany("Calificaciones")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Calif_Curso");

                    b.HasOne("Internado.Infrastructure.Models.Residente", "Residente")
                        .WithMany("Calificaciones")
                        .HasForeignKey("ResidenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Calif_Res");

                    b.Navigation("Curso");

                    b.Navigation("Residente");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Consulta", b =>
                {
                    b.HasOne("Internado.Infrastructure.Models.Usuario", "Medico")
                        .WithMany("Consulta")
                        .HasForeignKey("MedicoId")
                        .IsRequired()
                        .HasConstraintName("FK_Cons_Med");

                    b.HasOne("Internado.Infrastructure.Models.Residente", "Residente")
                        .WithMany("Consulta")
                        .HasForeignKey("ResidenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Cons_Res");

                    b.Navigation("Medico");

                    b.Navigation("Residente");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Curso", b =>
                {
                    b.HasOne("Internado.Infrastructure.Models.Usuario", "Docente")
                        .WithMany("Cursos")
                        .HasForeignKey("DocenteId")
                        .IsRequired()
                        .HasConstraintName("FK_Cursos_Docente");

                    b.Navigation("Docente");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.HistorialAcademico", b =>
                {
                    b.HasOne("Internado.Infrastructure.Models.Residente", "Residente")
                        .WithMany("HistorialAcademicos")
                        .HasForeignKey("ResidenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_HA_Res");

                    b.Navigation("Residente");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.HistorialMedico", b =>
                {
                    b.HasOne("Internado.Infrastructure.Models.Residente", "Residente")
                        .WithMany("HistorialMedicos")
                        .HasForeignKey("ResidenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_HM_Res");

                    b.Navigation("Residente");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.LoginAttempt", b =>
                {
                    b.HasOne("Internado.Infrastructure.Models.Usuario", "UsuarioNavigation")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_LoginAttempts_Usuarios");

                    b.Navigation("UsuarioNavigation");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.MovimientosMedicamento", b =>
                {
                    b.HasOne("Internado.Infrastructure.Models.Medicamento", "Medicamento")
                        .WithMany("MovimientosMedicamentos")
                        .HasForeignKey("MedicamentoId")
                        .IsRequired()
                        .HasConstraintName("FK_MM_Med");

                    b.HasOne("Internado.Infrastructure.Models.Usuario", "Usuario")
                        .WithMany("MovimientosMedicamentos")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_MM_Usr");

                    b.Navigation("Medicamento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Residente", b =>
                {
                    b.HasOne("Internado.Infrastructure.Models.Habitacion", "Habitacion")
                        .WithMany("Residentes")
                        .HasForeignKey("HabitacionId");

                    b.Navigation("Habitacion");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Usuario", b =>
                {
                    b.HasOne("Internado.Infrastructure.Models.Role", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .IsRequired()
                        .HasConstraintName("FK_Usuarios_Roles");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Curso", b =>
                {
                    b.Navigation("Asistencia");

                    b.Navigation("Calificaciones");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Habitacion", b =>
                {
                    b.Navigation("Residentes");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Medicamento", b =>
                {
                    b.Navigation("MovimientosMedicamentos");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Residente", b =>
                {
                    b.Navigation("Asistencia");

                    b.Navigation("Calificaciones");

                    b.Navigation("Consulta");

                    b.Navigation("HistorialAcademicos");

                    b.Navigation("HistorialMedicos");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Role", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Internado.Infrastructure.Models.Usuario", b =>
                {
                    b.Navigation("Consulta");

                    b.Navigation("Cursos");

                    b.Navigation("MovimientosMedicamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
